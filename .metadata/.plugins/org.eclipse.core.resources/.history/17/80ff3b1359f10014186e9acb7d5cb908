import java.net.*;
import java.io.*;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Scanner;

public class URLReader {
	
	static Map<Integer,String> verses = new HashMap();
    public static void main(String[] args) throws Exception {

    	//ask user for input
    	Scanner input = new Scanner(System.in);
    	System.out.println("What book would you like to look up?");
    	String Book = input.nextLine();
    	System.out.println("What chapter?");
    	int Chapter = input.nextInt();

    	
        URL oracle = new URL("https://www.biblegateway.com/passage/?search="+Book+"+"+Chapter);
        BufferedReader in = new BufferedReader(
        new InputStreamReader(oracle.openStream()));
        Integer vsNum = 0;
        Integer nextVs = 1;
        String str1 ="<span class=\"chapternum\">";
    	String inputLine;
    	String scatteredVerse="";


        
        boolean foundFirstVerse = false;
        //boolean chapterLoop = false;
        boolean reachedEndOfChapter = false;

        while ((inputLine = in.readLine()) != null){
        	if (inputLine.toLowerCase().contains(str1.toLowerCase())){
        		while(!reachedEndOfChapter){
	            	vsNum++;

	            	nextVs = vsNum+1;
	        		ArrayList<String> parts = new ArrayList<String>();
	        		
	        		if(!foundFirstVerse){
		        		//get first verse
			            System.out.println("Contains");
			    		System.out.println("First: " +inputLine);
			    		inputLine = inputLine.substring(inputLine.indexOf(str1));
			    		inputLine = inputLine.substring(inputLine.indexOf("</span>")+7);
			    		//We are now at the beginning of vs. 1
			    		
			    		System.out.println("Beginning at vs 1: " + inputLine);
			    		scatteredVerse = inputLine.substring(0,inputLine.indexOf("class=\"versenum\">"+vsNum+1));
			    		foundFirstVerse = true;
	        		}
	        		int stop = inputLine.indexOf("class=\"versenum\">"+nextVs.toString());
	        		if (stop == -1){
	        			stop = inputLine.length();
	        			reachedEndOfChapter = true;
	        		}
	        		int start;
	        		if (inputLine.indexOf("class=\"versenum\">"+vsNum.toString())!=-1 && 
	        				inputLine.indexOf("class=\"versenum\">"+vsNum.toString()) < stop){
	        			start = inputLine.indexOf("class=\"versenum\">"+vsNum.toString())+19;
	        		}
	        		else
	        			start = 0;
		    		scatteredVerse = inputLine.substring(start,stop);
		    		System.out.println("scatteredVerse = " + scatteredVerse);

	        		boolean partsLoop = false;
	        		//breaking verse into clean parts
	        		while(!partsLoop){
	        			String newPart = scatteredVerse;// = scatteredVerse.substring(scatteredVerse.indexOf("</span>")+7);
	        			int cutOff = newPart.indexOf("<");
	        			

	        			
	        			System.out.println("Cutoff value: " + cutOff);
	        			if (cutOff == -1 || stop <= cutOff){
	        				partsLoop = true;
	        				System.out.println("Breaking");
	        			}
	        			else {
	        				System.out.println("Adding " + newPart.substring(0, cutOff) + " to parts.");
	        				parts.add(newPart.substring(0, cutOff));
	        				scatteredVerse = scatteredVerse.substring(cutOff);
	        				System.out.println("new scatteredVerse: " + scatteredVerse);
	        				cutOff = scatteredVerse.indexOf("</sup>");
	        				//if (cutOff == -1)
	        					//cutOff = scatteredVerse.indexOf("</span>")+1;
	        				
	        				//"LORD" is different (can't just look for </sup>)
	        				if (scatteredVerse.indexOf("Lord") != -1
	        						&& ( (scatteredVerse.indexOf("Lord") < cutOff)
	        								|| cutOff ==-1)){
	        					//cutOff = scatteredVerse.indexOf("Lord") - 6;
	        					parts.add("Lord");
	        					cutOff = scatteredVerse.indexOf("</span>")+1;
	        				}
	        				
	        				System.out.println("cutoff" +cutOff);
	        				scatteredVerse = scatteredVerse.substring(cutOff+6);
	        			}
	        		}
	        		
	        		//put the pieces together
	        		System.out.println("Now assembling parts..." );
	        		String newString;
	        		newString = "";
	        		for (int i = 0; i < parts.size(); i++){
	        			newString += parts.get(i);
	        		}
	        		parts.clear();
	        		//cut off extra
	        		newString = newString.substring(0, newString.indexOf("n>"));
	        		
	        		verses.put(vsNum, newString);
	        		System.out.println("Imported vs " +vsNum);
	        		//if (reachedEndOfChapter)
	        		//	chapterLoop = true;

        		}
           	}

        }
        in.close();
        
      //display verses
		for (int i = 1; i <= verses.size(); i++){
			System.out.println("Verse " + i +": " + verses.get(i));
		}
    }
}